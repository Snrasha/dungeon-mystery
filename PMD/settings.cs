/// This file was generated by C# converter tool
/// Any changes made to this file manually will be lost next time the file is regenerated.

namespace PMD
{
    /// <summary>
    /// Defines key constant values for floor generation, providing a way
    /// to modify these constants if desired.
    /// </summary>
    public class GenerationConstants
    {
        public GenerationConstants()
        {
            this.merge_rooms_chance = 5;
            this.no_imperfections_chance = 60;
            this.secondary_structure_flag_chance = 80;
            this.max_number_monster_house_item_spawns = 7;
            this.max_number_monster_house_enemy_spawns = 30;
            this.first_dungeon_id_allow_monster_house_traps = 28;
        }

        public int merge_rooms_chance { get; set; }
        public int no_imperfections_chance { get; set; }
        public int secondary_structure_flag_chance { get; set; }
        public int max_number_monster_house_item_spawns { get; set; }
        public int max_number_monster_house_enemy_spawns { get; set; }
        public int first_dungeon_id_allow_monster_house_traps { get; set; }
    }

    /// <summary>
    /// Defines advanced settings for applying patches or changes to the original dungeon algorithm implementation
    /// 
    /// These settings are all disabled by default for vanilla generation.
    /// </summary>
    public class AdvancedGenerationSettings
    {
        public AdvancedGenerationSettings()
        {
            this.allow_wall_maze_room_generation = false;
            this.fix_dead_end_validation_error = false;
            this.fix_generate_outer_rooms_floor_error = false;
        }

        /// <summary>
        /// In GenerateMazeRoom, one of the initial checks tests if the current number of
        /// floor generation attempts is below 0, which is an impossible condition.
        /// 
        /// This results in no maze rooms made of walls ever being generated in the vanilla game.
        /// (Water mazes can still be generated via secondary structures, they call a sub-function
        /// to generate the maze)
        /// 
        /// This patch overrides this check, allowing GenerateMazeRoom to continue and potentially
        /// generate a maze in this manner.
        /// </summary>
        public bool allow_wall_maze_room_generation { get; set; }
        /// <summary>
        /// In AssignGridCellConnections, the second half of the function is dedicated to
        /// removing dead ends from floor generation if specified in the floor's properties.
        /// 
        /// Part of this process is searching for grid cells with only one connection (a dead end),
        /// then seeing if there is another grid cell that is adjacent that we can connect to.
        /// 
        /// A bug appears in that all of the four validation checks to ensure the grid cell
        /// in the specified direction is valid end up using the same offset, meaning 3
        /// of them are checking the wrong grid cell.
        /// 
        /// This patch fixes these checks to ensure that the correct grid cell is checked in all
        /// directions.
        /// </summary>
        public bool fix_dead_end_validation_error { get; set; }
        /// <summary>
        /// In GenerateOuterRoomsFloor (a layout where there are exclusively rooms on the outer ring of the floor),
        /// there is an error involved in building the connections between grid cells to create the ring
        /// of rooms.
        /// 
        /// This error results in the original implementation failing for grid_size_x <= 2, as one
        /// of the branches for assigning connections is never taken, and the other branch will not
        /// provide a backup connection.
        /// 
        /// There is also a minor issue involving top/bottom connections which results in hallways
        /// being connected from the bottom instead of from the top, but this does not affect the
        /// connectivity of the map.
        /// 
        /// This patch fixes the error and minor issues within the function, providing
        /// consistently connected generation for all grid sizes.
        /// </summary>
        public bool fix_generate_outer_rooms_floor_error { get; set; }
    }
}